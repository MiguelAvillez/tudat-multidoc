#########################################################################
#    ███    ███  ██████  ██████  ██    ██ ██      ███████
#    ████  ████ ██    ██ ██   ██ ██    ██ ██      ██
#    ██ ████ ██ ██    ██ ██   ██ ██    ██ ██      █████
#    ██  ██  ██ ██    ██ ██   ██ ██    ██ ██      ██
#    ██      ██  ██████  ██████   ██████  ███████ ███████
#########################################################################

extended_summary: |
  This module contains a set of factory functions for setting up the
  gravity field variations of a (spherical harmonic) gravity field.



#########################################################################
#   ██████ ██          ██      ██████  ██████ ███████  ██████
#  ██      ██         ████    █       █       ██      █
#  ██      ██        ██  ██    █████   █████  █████    █████
#  ██      ██       ████████        █       █ ██            █
#   ██████ ███████ ██      ██ ██████  ██████  ███████ ██████
#########################################################################

classes:
  # base class:
  #######################################################################

  - name: GravityFieldVariationSettings
    short_summary: "Base class for providing settings for gravity field variations."

  - name: BasicSolidBodyGravityFieldVariationSettings
    short_summary: "Class for providing settings for solid body gravity field variations, derived from GravityFieldVariationSettings."

##############################################################################
#  ███████ ██    ██ ███    ██  ██████ ████████ ██  ██████  ███    ██  ██████
#  ██      ██    ██ ████   ██ ██         ██    ██ ██    ██ ████   ██ █
#  █████   ██    ██ ██ ██  ██ ██         ██    ██ ██    ██ ██ ██  ██  █████
#  ██      ██    ██ ██  ██ ██ ██         ██    ██ ██    ██ ██  ██ ██       █
#  ██       ██████  ██   ████  ██████    ██    ██  ██████  ██   ████ ██████
##############################################################################

functions:
  # factory functions:
  #######################################################################


  - name: solid_body_tide # [py]    
    short_summary: "Factory function for creating solid body tides."
    extended_summary: |
      Factory function for creating solid body tides, using a single real Love number at a single degree (e.g. :math:`k_{2}`, :math:`k_{3}`, etc.). This function evaluates Eq. (6.6) from the IERS Conventions 2010, with real :math:`k_{l}=k_{lm}`, and a single tide-raising body :math:`j`.

    parameters:
      - name: tide_raising_body # [py]
        type: str # [py]
        description: "Name of body raising the tide."

      - name: love_number # [py]
        type: float # [py]
        description: "Constant real Love number to use for body undergoing deformation, at the spherical harmonic degree defined by 'degree' input."

      - name: degree # [py]
        type: int # [py]
        description: "Degree of the spherical harmonic gravity field, and associated Love number, that is to be considered."

    returns:
        type: BasicSolidBodyGravityFieldVariationSettings
        description: Instance of the :class:`~tudatpy.numerical_simulation.environment_setup.gravity_field_variation.BasicSolidBodyGravityFieldVariationSettings` derived :class:`~tudatpy.numerical_simulation.environment_setup.gravity_field_variation.GravityFieldVariationSettings` class




  - name: solid_body_tide_complex_k # [py]
    short_summary: "Factory function for creating solid body tides."
    extended_summary: |
      As :func:`~tudatpy.numerical_simulation.environment_setup.gravity_field_variation.solid_body_tide`, but with complex value for the Love number.

    parameters:
      - name: tide_raising_body # [py]
        type: str # [py]
        description: "Name of body raising the tide."

      - name: love_number # [py]
        type: complex # [py]
        description: "Constant real Love number to use for body undergoing deformation, at the spherical harmonic degree defined by 'degree' input."

      - name: degree # [py]
        type: int # [py]
        description: "Degree of the spherical harmonic gravity field, and associated Love number, that is to be considered."

    returns:
        type: BasicSolidBodyGravityFieldVariationSettings
        description: Instance of the :class:`~tudatpy.numerical_simulation.environment_setup.gravity_field_variation.BasicSolidBodyGravityFieldVariationSettings` derived :class:`~tudatpy.numerical_simulation.environment_setup.gravity_field_variation.GravityFieldVariationSettings` class



  - name: solid_body_tide_degree_variable_k # [py]
    short_summary: "Factory function for creating solid body tides."
    extended_summary: |
      Factory function for creating solid body tides, using a set of real, separate, Love numbers at any number of degrees degree (e.g. :math:`k_{2}`, :math:`k_{3}`, etc.). This is effectively identical to a list of outputs from :func:`~tudatpy.numerical_simulation.environment_setup.gravity_field_variation.solid_body_tide`, with differing degrees and Love numbers. 

    parameters:
      - name: tide_raising_body # [py]
        type: str # [py]
        description: "Name of body raising the tide."

      - name: love_number_per_degree # [py]
        type: dict( int, float ) # [py]
        description: "Dictionary of Love numbers for each degree that is to be taken into account, with the key representing the order of the Love number :math:`k_{i}`, and the associated value of the diction"

    returns:
        type: BasicSolidBodyGravityFieldVariationSettings
        description: Instance of the :class:`~tudatpy.numerical_simulation.environment_setup.gravity_field_variation.BasicSolidBodyGravityFieldVariationSettings` derived :class:`~tudatpy.numerical_simulation.environment_setup.gravity_field_variation.GravityFieldVariationSettings` class



  - name: solid_body_tide_degree_variable_complex_k # [py]
    short_summary: "Factory function for creating solid body tides."
    extended_summary: |
      As :func:`~tudatpy.numerical_simulation.environment_setup.gravity_field_variation.solid_body_tide_degree_variable_k`, but with complex values for the Love number.

    parameters:
      - name: tide_raising_body # [py]
        type: str # [py]
        description: "Name of body raising the tide."

      - name: love_number_per_degree # [py]
        type: dict( int, complex ) # [py]
        description: "Constant real Love number to use for body undergoing deformation, at the spherical harmonic degree defined by 'degree' input."

    returns:
        type: BasicSolidBodyGravityFieldVariationSettings
        description: Instance of the :class:`~tudatpy.numerical_simulation.environment_setup.gravity_field_variation.BasicSolidBodyGravityFieldVariationSettings` derived :class:`~tudatpy.numerical_simulation.environment_setup.gravity_field_variation.GravityFieldVariationSettings` class

    
     








    
    


